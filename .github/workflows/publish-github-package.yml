name: Publish Github Package

on:
  push:
    tags:
      - '**'
  workflow_dispatch:




jobs:
  publish:
    runs-on: macos-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Assemble project
        run: ./gradlew assemble

      - name: Publish to local maven repo
        run: ./gradlew publishToMavenLocal -Psigning.gnupg.keyName=${{ secrets.KEYNAME }} -Psigning.gnupg.passphrase=${{ secrets.PASSPHRASE }}

      - name: Setup repository structure
        run: |
          cd ~/.m2/repository/com/jinxservers
          mkdir -p com/jinxservers/
          find . -maxdepth 1 -not -name "com" -not -name "." -type d -exec bash -c "mv {} com/jinxservers/" \;

      - name: Generate checksums for artifacts
        run: |
          cd ~/.m2/repository/com/jinxservers
          find . -name "maven-metadata-local.xml" -type f -exec bash -c "rm {}" \;
          find . ! -name '*.asc' -type f -exec bash -c "shasum -a 1 {} > {}.sha1" \;
          find . ! -name '*.asc' ! -name '*.sha1' -type f -exec bash -c "md5 {} > {}.md5" \;

      - name: Zip artifacts
        run: |
          cd ~/.m2/repository/com/jinxservers
          zip -r alphavantage-lib.zip com

      - name: Publish artifacts to Maven Central Portal
        run: |
          cd ~/.m2/repository/com/jinxservers
          curl --request POST --verbose \
          --header 'Authorization: ${{ secrets.TOKENHEADER }}' \
          --form bundle=@alphavantage-lib.zip \
          --form publishingType='AUTOMATIC' https://central.sonatype.com/api/v1/publisher/upload